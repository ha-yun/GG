# 도커 컴포즈 파일
# 공통 파트 (볼륨, 네트워크)
volumes:                  # 볼륨
  mysql_data:             # 커스텀(mysql_data) 지정

networks:                 # 네트워크 지정
  all_dir_network:        # 커스텀(all_dir_network) 지정
    driver: bridge        # 드라이버 타입 지정


# 서비스 파일
services:
  eureka-server: # 서비스명
    build: ./eureka-server
    container_name: eureka-server
    ports:
      - "8761:8761"
    networks:
      - all_dir_network
  
  ggdatabase: # 서비스명
    container_name: ggdatabase  # 컨테이너명, 타 서비스에서 접속시 도메인 역활 담당
    image: mysql
    restart: always # 비정상 다운될때 자동 재가동
    environment:
      - MYSQL_ROOT_PASSWORD=p1234 # 루트 사용자 비번
      - MYSQL_DATABASE=gg       # 초기 데이터베이스명
      - MYSQL_USER=guest          # 일반 사용자 아이디
      - MYSQL_PASSWORD=p1234      # 일반 사용자 비번
    volumes:
      - mysql_data:/var/lib/mysql # 데이터베이스 컨테이너가 삭제되고 새로 생성, 데이터는 유지됨
    ports:
      - "3306:3306"
    networks:
        - all_dir_network

  redis:
    image: redis
    container_name: redis
    restart: always
    ports:
      - "6379:6379"
    networks:
      - all_dir_network
      
  # kafka:
  #   image: apache/kafka:latest
  #   container_name: kafka
  #   ports:
  #     - "9092:9092"
  #   environment:
  #     KAFKA_NODE_ID: 1
  #     KAFKA_PROCESS_ROLES: broker,controller
  #     KAFKA_LISTENERS: PLAINTEXT://localhost:9092,CONTROLLER://localhost:9093
  #     KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092
  #     KAFKA_CONTROLLER_LISTENER_NAMES: CONTROLLER
  #     KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT
  #     KAFKA_CONTROLLER_QUORUM_VOTERS: 1@localhost:9093
  #     KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
  #     KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
  #     KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
  #     KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
  #     KAFKA_NUM_PARTITIONS: 3
  #   networks:
  #     - all_dir_network

  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    container_name: zookeeper
    restart: always
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
    networks:
      - all_dir_network

  kafka:
    image: confluentinc/cp-kafka:latest
    container_name: kafka
    restart: always
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: "zookeeper:2181"
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    networks:
      - all_dir_network

  api-gateway:
    build: ./api-gateway
    container_name: api-gateway
    depends_on:
      - eureka-server
      - kafka
      - redis
    environment:
      - EUREKA_CLIENT_SERVICEURL_DEFAULTZONE=http://eureka-server:8761/eureka/
      - SPRING_KAFKA_BOOTSTRAP_SERVERS=kafka:9092  # 환경변수에서도 kafka:9092 지정
      - SPRING_REDIS_HOST=redis
      - SPRING_REDIS_PORT=6379
    ports:
      - "8080:8080"
    networks:
      - all_dir_network
  
  msa-live:
    build: ./msa-live
    container_name: msa-live
    depends_on:
      - eureka-server
      - kafka
      - redis
    environment:
      - EUREKA_CLIENT_SERVICEURL_DEFAULTZONE=http://eureka-server:8761/eureka/
      - SPRING_KAFKA_BOOTSTRAP_SERVERS=kafka:9092  # 환경변수에서도 kafka:9092 지정
      - SPRING_REDIS_HOST=redis
      - SPRING_REDIS_PORT=6379
    ports:
      - "8085:8085"
    networks:
      - all_dir_network
  
  msa-user-demo:
    build: ./msa-user-demo
    container_name: msa-user-demo
    depends_on:
      - eureka-server
      - ggdatabase
      - kafka
      - redis
    environment:
      - EUREKA_CLIENT_SERVICEURL_DEFAULTZONE=http://eureka-server:8761/eureka/
      - SPRING_REDIS_HOST=redis
      - SPRING_REDIS_PORT=6379
    ports:
      - "8081:8081"
    networks:
      - all_dir_network