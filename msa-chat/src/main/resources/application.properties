spring.application.name=msa-chat

spring.main.allow-bean-definition-overriding=true
server.port=8085

# docker-deploy test
eureka.client.service-url.defaultZone= http://eureka-server:8761/eureka/
# eureka.client.service-url.defaultZone=http://localhost:8761/eureka
eureka.instance.lease-renewal-interval-in-seconds=15
eureka.instance.lease-expiration-duration-in-seconds=20

# No-SQL - redis
# docker-deploy test
spring.data.redis.host=redis
# spring.data.redis.host=localhost
spring.data.redis.port=6379
spring.data.redis.repositories.enabled=false

# JPA
spring.jpa.hibernate.ddl-auto=update
spring.jpa.properties.hibernate.format_sql=true

# jwt
jwt.token.raw_secret_key=8c258ef9aa12306fce18c1d12482c6ddf57f2f91afb0cfb7a99e157892afa885
jwt.access-token-expiration=21600000
jwt.refresh-token-expiration=604800000

# kafka
# docker-deploy test
spring.kafka.bootstrap-servers=kafka:9092
# spring.kafka.bootstrap-servers=localhost:9092
spring.kafka.producer.key-serializer: org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer: org.apache.kafka.common.serialization.StringSerializer

spring.kafka.consumer.key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer: org.apache.kafka.common.serialization.StringDeserializer

spring.kafka.consumer.auto-offset-reset: earliest
spring.kafka.consumer.group-id: test-group
spring.kafka.listener.missing-topics-fatal: false